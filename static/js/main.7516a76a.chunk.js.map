{"version":3,"sources":["p2-homeworks/h2/HW2.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","message","avatar","src","messageText","name","time","messageData","HW1","Affair","s","nameN","affair","onClick","deleteAffairCallback","_id","buttonX","Affairs","mappedAffairs","data","map","a","useClass","filter","putButton","button","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","homeWork2","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onOff","enterButton","value","onChange","onKeyPress","inputClass","disabled","buttonAddUser","counterUser","GreetingContainer","users","addUserCallback","setName","setError","onOf","setOnOf","alert","length","e","currentTarget","key","HW3","setUsers","nameUser","newName","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7516a76a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeWork2\":\"HW2_homeWork2__2rCsE\",\"button\":\"HW2_button__200rX\",\"putButton\":\"HW2_putButton__303HG\",\"buttonX\":\"HW2_buttonX__1JbIw\",\"nameN\":\"HW2_nameN__3MCc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8uNVK\",\"avatar\":\"Message_avatar__3iyx7\",\"name\":\"Message_name__3xA-F\",\"messageText\":\"Message_messageText__2sPm1\",\"time\":\"Message_time__fxNFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonAddUser\":\"Greeting_buttonAddUser__2g3ND\",\"counterUser\":\"Greeting_counterUser__2NbDZ\",\"inputClass\":\"Greeting_inputClass__c2xDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__2539u\",\"error\":\"SuperInputText_error__hXM3J\",\"superInput\":\"SuperInputText_superInput__3sCHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__NungY\",\"column\":\"HW4_column__2bK_N\",\"testSpanError\":\"HW4_testSpanError__2g7TO\",\"input\":\"HW4_input__2wRV3\",\"buttonDefault\":\"HW4_buttonDefault__xV0TZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3jaPd\",\"red\":\"SuperButton_red__2LIWV\",\"blink\":\"SuperButton_blink__3uGHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1J60V\",\"spanClassName\":\"SuperCheckbox_spanClassName__1jH7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3dqMd\"};","import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\ntype messageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageType) {\r\n    return (\r\n        <div className={classes.message}>\r\n            <div className={classes.avatar}>\r\n                <img\r\n                    src={props.avatar}/>\r\n            </div>\r\n            <div className={classes.messageText}>\r\n                <div className={classes.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={classes.messageText}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={classes.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message';\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://i.pinimg.com/736x/a8/53/87/a85387440d54d8536c1f66b8eb8b2268--line-sketch-pencil.jpg',\r\n    name: 'Alice',\r\n    message: 'Hey there! How are you doing?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            {/*<hr/>*/}\r\n            {/*/!*для личного творчества, могу проверить*!/*/}\r\n            {/*/!*<AlternativeMessage/>*!/*/}\r\n            {/*<hr/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './HW2.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {return props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div className={s.nameN}>\r\n            {props.affair.name}\r\n            <button onClick={deleteCallback}className={s.buttonX}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './HW2.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n    const useClass = (filter: FilterType) => {\r\n        if (props.filter === filter ) {\r\n           return s.putButton\r\n        }\r\n        return s.button\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <button onClick={setAll}className={useClass('all')}>All</button>\r\n            <button onClick={setHigh}className={useClass('high')}>High</button>\r\n            <button onClick={setMiddle}className={useClass('middle')}>Middle</button>\r\n            <button onClick={setLow}className={useClass('low')}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react';\r\nimport Affairs from './Affairs';\r\nimport s from './HW2.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType =  'high' | 'middle' | 'low' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType) : AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\r\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\r\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\r\n\r\n    else return [] // need to fix\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    return affairs.filter(affairs => affairs._id !== _id)\r\n    // affairs.filter(affairs => affairs._id !== _id)// need to fix any\r\n    // return filteredAffairs(affairs, _id)  // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<any>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div className={s.homeWork2}>\r\n            {/*<hr/>*/}\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            {/*<hr/>*/}\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            {/*<hr/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onOff: boolean\r\n    enterButton: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onOff, enterButton} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                onKeyPress={enterButton}\r\n                className={s.inputClass}/>\r\n            <button onClick={addUser} disabled={onOff} className={s.buttonAddUser}>add</button>\r\n            <span className={s.counterUser}>{totalUsers}</span>\r\n            <div>\r\n                <span>{error}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (nameUser: string) => void // need to fix any\r\n}\r\n\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any        ZNACHENIE INPUTA\r\n    const [error, setError] = useState<string>('') // need to fix any      PROVERKA NA OSHIBKI\r\n    const [onOf, setOnOf] = useState<boolean>(false)\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any PROVERKA TO CHEGO VVELI PYSTOE ILI NET\r\n        setOnOf(false)\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n\r\n    const onOff = onOf\r\n\r\n    const addUser = () => {\r\n        if (name === '') {\r\n            setOnOf(true)\r\n            setError('    Enter the correct name!!!')\r\n        }\r\n        if (name !== '') {\r\n            setError('')\r\n            setOnOf(false)\r\n            addUserCallback(name)\r\n            alert(`Hello ${name} !`) // need to fix\r\n            setName('')\r\n        }\r\n    }\r\n    const enterButton = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onOff={onOff}\r\n            enterButton={enterButton}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any MASSIV IMEN\r\n    const addUserCallback = (nameUser: string) => { // need to fix any   SUDA PRIHODIT IMA DOBAVIT VVERH\r\n        let newName = {\r\n            _id: v1(), name: nameUser\r\n        }\r\n        setUsers([newName, ...users]\r\n        )\r\n\r\n        // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            {/*homeworks 3*/}\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked) // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n    // const onChangeCallback = (e:ChangeEvent<HTMLInputElement>) => {\r\n    //     setChecked(e.currentTarget.checked)\r\n    // }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    // onChange={onChange}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChange={testOnChange}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<div>react homeworks:</div>*/}\r\n            <HW1 />\r\n            <HW2 />\r\n            <HW3 />\r\n            <HW4 />\r\n            <HW5 />\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}